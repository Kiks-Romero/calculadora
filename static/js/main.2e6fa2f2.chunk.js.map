{"version":3,"sources":["components/calculator/styled/index.jsx","components/calculator/index.jsx","App.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","dot","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","el","value","target","getAttribute","includes","choseOperation","compute","result","previousNumber","parseFloat","currentNumber","isNaN","onClick","String","slice","data","undefined","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e6fa2f2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width: 400px;\n  margin: 40px auto;\n  grid-template-columns: repeat(4, 100px);\n  grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n  box-shadow: 2px 2px 10px #333;\n  border-radius: 10px;\n`;\n\nexport const Screen = styled.div`\n  grid-column: 1 / -1;\n  background-color: rgba(60, 64, 67, 0.75);\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  padding: 10px;\n  word-wrap: break-word;\n  word-break: break-all;\n  text-align: right;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const Previous = styled.div`\n  color: rgba(255, 255, 255, 0.75);\n  font-size: 1.5rem;\n`;\n\nexport const Current = styled.div`\n  color: white;\n  font-size: 2.5rem;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  font-size: 2rem;\n  border: 1px outset white;\n  outline: none;\n  background-color: rgba(255, 255, 255, 0.75);\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n\n  /*Fast form*/\n  ${({ gridSpan }) => gridSpan && `grid-column:span ${gridSpan};`}\n  ${({ operation }) => operation && `background-color:gray;`}\n  ${({ control }) => control && `background-color:skyblue;`}\n  ${({ equals }) =>\n    equals && `border-bottom-right-radius:10px; background-color:gray;`}\n  ${({ dot }) =>\n    dot && `border-bottom-left-radius:10px; background-color:skyblue;`}\n`;\n","import React, { useState } from \"react\";\nimport { Button, Container, Current, Previous, Screen } from \"./styled\";\n\nexport default function Calculator() {\n  const [previous, setPrevious] = useState(\"\");\n  const [current, setCurrent] = useState(\"\");\n  const [operation, setOperation] = useState(\"\");\n\n  const appendValue = (el) => {\n    const value = el.target.getAttribute(\"data\");\n    if (value === \".\" && current.includes(\".\")) return;\n    setCurrent(current + value);\n  };\n\n  const handleDelete = () => {\n    setCurrent(String(current).slice(0, -1));\n  };\n\n  const handleAllClear = () => {\n    setCurrent(\"\");\n    setPrevious(\"\");\n    setOperation(\"\");\n  };\n\n  const choseOperation = (el) => {\n    if (current === \"\") return;\n    if (previous !== \"\") {\n      let value = compute();\n      setPrevious(value);\n    } else {\n      setPrevious(current);\n    }\n\n    setCurrent(\"\");\n    setOperation(el.target.getAttribute(\"data\"));\n  };\n\n  const equals = () => {\n    let value = compute();\n    if (value === undefined || value === null) return;\n\n    setCurrent(value);\n    setPrevious(\"\");\n    setOperation(\"\");\n  };\n\n  const compute = () => {\n    let result;\n    let previousNumber = parseFloat(previous);\n    let currentNumber = parseFloat(current);\n\n    if (isNaN(previousNumber) || isNaN(currentNumber)) return;\n\n    switch (operation) {\n      case \"/\":\n        result = previousNumber / currentNumber;\n        break;\n      case \"*\":\n        result = previousNumber * currentNumber;\n        break;\n      case \"+\":\n        result = previousNumber + currentNumber;\n        break;\n      case \"-\":\n        result = previousNumber - currentNumber;\n        break;\n      default:\n        return;\n    }\n    return result;\n  };\n\n  return (\n    <Container>\n      <Screen>\n        <Previous>\n          {previous} {operation}\n        </Previous>\n        <Current>{current}</Current>\n      </Screen>\n      <Button control gridSpan={2} onClick={handleAllClear}>\n        AC\n      </Button>\n      <Button control onClick={handleDelete}>\n        Del\n      </Button>\n      <Button data={\"/\"} operation onClick={choseOperation}>\n        /\n      </Button>\n      <Button data={\"7\"} onClick={appendValue}>\n        7\n      </Button>\n      <Button data={\"8\"} onClick={appendValue}>\n        8\n      </Button>\n      <Button data={\"9\"} onClick={appendValue}>\n        9\n      </Button>\n      <Button data={\"*\"} operation onClick={choseOperation}>\n        *\n      </Button>\n      <Button data={\"4\"} onClick={appendValue}>\n        4\n      </Button>\n      <Button data={\"5\"} onClick={appendValue}>\n        5\n      </Button>\n      <Button data={\"6\"} onClick={appendValue}>\n        6\n      </Button>\n      <Button data={\"+\"} operation onClick={choseOperation}>\n        +\n      </Button>\n      <Button data={\"1\"} onClick={appendValue}>\n        1\n      </Button>\n      <Button data={\"2\"} onClick={appendValue}>\n        2\n      </Button>\n      <Button data={\"3\"} onClick={appendValue}>\n        3\n      </Button>\n      <Button data={\"-\"} operation onClick={choseOperation}>\n        -\n      </Button>\n      <Button dot data={\".\"} onClick={appendValue}>\n        .\n      </Button>\n      <Button data={\"0\"} onClick={appendValue}>\n        0\n      </Button>\n      <Button equals gridSpan={2} onClick={equals}>\n        =\n      </Button>\n    </Container>\n  );\n}\n","import \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}